from random import randint
import pygame

import os, sys

app_folder = os.path.dirname(os.path.realpath(sys.argv[0]))

pygame.font.init()
font1 = pygame.font.SysFont("Arial", 80)
win = font1.render('YOU WIN!', True, (255, 255, 255))
lose = font1.render('YOU LOSE!', True, (180, 0, 0))

font2 = pygame.font.SysFont("Arial", 32)

img_bullet = os.path.join(app_folder,"bullet.png")
img_hero = os.path.join(app_folder,"rocket.png")
img_enemy = os.path.join(app_folder,"ufo.png")
img_asteroid = os.path.join(app_folder,"asteroid.png")
img_space = os.path.join(app_folder,"123.jpg")

score = 0 
goal = randint(10, 20) 
life = 3
ammo = 25
full_ammo = ammo

class GameSprite(pygame.sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.transform.scale(pygame.image.load(player_image), (size_x, size_y))
        self.speed = player_speed

        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
 
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update(self):
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] or keys[pygame.K_a] and self.rect.x > 5:
            self.rect.x -= self.speed
        if keys[pygame.K_RIGHT] or keys[pygame.K_d] and self.rect.x < win_width - 80:
            self.rect.x += self.speed
    def fire(self):
        global ammo
        bullet = Bullet(img_bullet, self.rect.centerx, self.rect.top, 15, 20, -15)
        bullets.add(bullet)
        ammo -= 1

class Enemy(GameSprite):
    def update(self):
        global life
        self.rect.y += self.speed    
        if self.rect.y > win_height:
            self.rect.x = randint(80, win_width - 80)
            self.rect.y = 0
            life = int(life) - 1
 
class Bullet(GameSprite):
    def update(self):
        self.rect.y += self.speed
        if self.rect.y < 0:
            self.kill()

class Asteroid(GameSprite):
    def update(self):
        self.rect.y += self.speed
        if self.rect.y > win_height:
            self.rect.x = randint(80, win_width - 80)
            self.rect.y = 0
 
win_width = 700
win_height = 500
pygame.display.set_caption("Shooter")
window = pygame.display.set_mode((win_width, win_height))
background = pygame.transform.scale(pygame.image.load(img_space), (win_width, win_height))

ship = Player(img_hero, 275, 400, 80, 100, 10)
asteroid = Asteroid(img_asteroid, randint(80, win_width - 80), -40, 80, 50, 5)

monsters = pygame.sprite.Group()
for i in range(1, 6):
    monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
    monsters.add(monster)
 
bullets = pygame.sprite.Group()
 
finish = False
run = True 
while run:
    for e in pygame.event.get():
        if e.type == pygame.QUIT:
            run = False
        elif e.type == pygame.KEYDOWN:
            if e.key == pygame.K_SPACE:
                ship.fire()
 
    if not finish:
        window.blit(background,(0,0))

        text = font2.render("Счет: " + str(score) + "/" + str(goal), 1, (255, 255, 255))
        window.blit(text, (10, 20))

        text_ammo = font2.render("Ammo: " + str(ammo) + "/" + str(full_ammo), 1, (0, 0, 255))
        window.blit(text_ammo, (540, 450))

        text_lifes = font2.render("Lifes: " + str(life), 1, (255, 0, 0))
        window.blit(text_lifes, (10, 50))

        ship.update()
        asteroid.update()
        monsters.update()
        bullets.update()

        ship.reset()
        asteroid.reset()
        monsters.draw(window)
        bullets.draw(window)

        collides = pygame.sprite.groupcollide(monsters, bullets, True, True)
        for c in collides:
            score = score + 1
            monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
            monsters.add(monster)

        if pygame.sprite.spritecollide(ship, monsters, False) or life <= 0:
            finish = True
            window.blit(lose, (200, 200))

        if pygame.sprite.collide_rect(ship, asteroid):
            finish = True
            window.blit(lose, (200, 200))

        if score == goal or score > goal:
            finish = True
            window.blit(win, (200, 200))
        
        if ammo <= 0:
            finish = True
            window.blit(lose, (200, 200))           
        

        pygame.display.update()
    pygame.time.delay(50)
